
const StorageLocator = function(storageLocatorOptions){
    const locations = new Map()
    this.registerStorageLocation = (location) => locations.set(location,{})
    this.storageLocation = (location) => {
        const loc = locations.get(location)
        if ( !loc ) throw new Error("Location not registered")
        return loc
    }
}

const Storage = function(storageLocator) {

    this.registerStorageLocation = (location) => {
        storageLocator.registerStorageLocation(location)
    }

    this.storePkiResource = async function( location,resourceName,data ) {
        //console.log(`dump resource in the location [${location}] with key [${resourceName}] and value [${data.substring(0,25)} ... ${data.slice(-25)}]`)
        try {
            storageLocator.storageLocation(location)[resourceName] = data
        } catch (error) {
            return Promise.reject(error)
        }
        return Promise.resolve()
    }

    this.dumpPkiResource = async function( location,resourceName ) {
        //console.log(`dump resource in the location [${location}] with key [${resourceName}]`)
        return Promise.resolve(storageLocator.storageLocation(location)[resourceName])
    }
}

export { Storage, StorageLocator }